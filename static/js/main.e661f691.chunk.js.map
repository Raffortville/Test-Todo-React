{"version":3,"sources":["config.js","store/actions/todoActions.js","const.js","utils.js","components/TodoForm.js","store/actions/userActions.js","store/actions/index.js","store/reducers/todoReducer.js","components/TodoList.js","components/Alert.js","components/Title.js","components/TodoHeader.js","pages/Home.js","components/Navigation.js","components/Header.js","components/UserForm.js","pages/Signin.js","store/reducers/userReducer.js","pages/Singup.js","components/logoutDialog.js","pages/logout.js","App.js","store/reducers/index.js","index.js"],"names":["URL","GET_TODOS","CURRENT_TODO","ADD_TODO","DELETE_TODO","SET_ALERT","UPDATE_TODO","SET_LOADING","getTodos","todos","type","payload","selectTodo","todo","addTodo","deleteTodo","id","updateTodo","setAlert","alert","isLoading","mode","fetchTodo","dispatch","a","url","userId","headers","token","axios","get","response","data","console","log","getTodoById","result","postTodo","message","post","deleteTodoById","delete","patchTodo","_id","put","navMenuOut","name","icon","link","navMenuIn","loginInitialState","email","password","colors","value","label","deleteInfoMessage","severity","clearTodoListMessage","addSuccessAlert","errorAlert","updateSuccessAlert","connexionError","validator","obj","valid","Object","values","forEach","TodoForm","props","useDispatch","currentTodo","useSelector","state","currentUser","user","useState","setTodo","modeForm","modeFormName","setModeFormName","React","useEffect","handleChange","e","target","Box","mt","width","Card","className","elevation","CardContent","Typography","variant","display","flexDirection","TextField","onChange","color","margin","title","required","multiline","rows","description","select","helperText","map","option","MenuItem","justifyContent","style","backgroundColor","CardActions","Grid","container","justify","alignItems","Button","onClick","closeTodoForm","window","sessionStorage","setItem","size","IconButton","Icon","LOG_USER","LOG_OUT","logUser","logout","postCreateUser","postLogUser","logOut","location","reload","actions","todoActions","userActions","initialState","completed","loading","TodoList","expanded","setExpand","item","md","length","Paper","index","Accordion","panel","event","isExpanded","AccordionSummary","expandIcon","AccordionDetails","component","Tooltip","handleModeForm","openTodoForm","startIcon","AlertMessage","setTimeout","Alert","Title","TodoHeader","createModeForm","toggleTodoForm","setToggleTodoForm","setFormMode","handleToggleTodoForm","val","direction","mr","Home","Navigation","userLog","menuField","setMenuField","List","field","ListItem","to","ListItemIcon","username","Header","Toolbar","UserForm","setState","p","position","loginMode","handleSubmit","bottom","Signin","Signup","LogoutDialog","history","useHistory","Dialog","open","aria-describedby","DialogContent","DialogTitle","DialogActions","push","Logout","App","diplay","exact","path","rootReducer","combineReducers","action","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e661f691.chunk.js","sourcesContent":["const prod = \"https://vast-plains-10523.herokuapp.com\";\r\n\r\nconst local = \"http://localhost:8080\";\r\n\r\nlet modeLocal = false;\r\n\r\nlet url;\r\n\r\nconst setUrlApi = () => {\r\n\r\n  modeLocal ? url = local : url = prod;\r\n\r\n  return url\r\n};\r\n\r\nexport let URL = setUrlApi()","import axios from 'axios'\r\nimport {URL} from '../../config'\r\n\r\n//// declare actions ////\r\n\r\nexport const GET_TODOS = \"GET_TODOS\"\r\nexport const CURRENT_TODO = \"CURRENT_TODO\"\r\nexport const ADD_TODO = \"ADD_TODO\"\r\nexport const DELETE_TODO = \"DELETE_TODO\"\r\nexport const SET_ALERT = \"SET_ALERT\"\r\nexport const UPDATE_TODO = \"UPDATE_TODO\"\r\nexport const SET_LOADING = \"SET_LOADING\"\r\n\r\n\r\n//// defines actions function to connect the components React with Redux////\r\n\r\nexport const getTodos = (todos) => ({\r\n\r\n    type: GET_TODOS,\r\n    payload:todos\r\n})\r\n\r\nexport const selectTodo = (todo) => ({\r\n\r\n    type : CURRENT_TODO,\r\n    payload:todo\r\n})\r\n\r\nexport const addTodo = (todo) => ({\r\n\r\n    type:ADD_TODO,\r\n    payload:todo\r\n});\r\n\r\nexport const deleteTodo = (id) => ({\r\n\r\n    type:DELETE_TODO,\r\n    payload:id\r\n});\r\n\r\nexport const updateTodo = (todo) => ({\r\n\r\n    type:UPDATE_TODO,\r\n    payload:todo\r\n});\r\n\r\nexport const setAlert = (alert) => ({\r\n\r\n    type:SET_ALERT,\r\n    payload:alert\r\n});\r\n\r\nexport const isLoading = (mode) => ({\r\n\r\n    type:SET_LOADING,\r\n    payload:mode\r\n})\r\n\r\n///// API CALL  communicate with our DB API and our  react components //////\r\n\r\nexport const fetchTodo = (payload) => async dispatch => {\r\n\r\n    const url = `${URL}/tasks/${payload.userId}`\r\n\r\n    const headers = {\"Authorization\":`${payload.token}`}\r\n\r\n        dispatch(isLoading(true))\r\n\r\n    try {\r\n\r\n        const response = await axios.get(url,{headers:headers})\r\n        const data = await response.data\r\n\r\n        dispatch(getTodos(data))\r\n        dispatch(isLoading(false))\r\n\r\n    } catch (error) {console.log(error)}\r\n        \r\n}\r\n\r\nexport const getTodoById = (payload,token) => async dispatch => {\r\n\r\n   const url = `${URL}/tasks/byId/${payload}`\r\n\r\n   const headers = {\"Authorization\":`${token}`}\r\n\r\n    try {\r\n\r\n        const response = await axios.get(url,{headers:headers})\r\n\r\n        const result =  await response.data\r\n\r\n        dispatch(selectTodo(result))\r\n        \r\n    } catch (error) {console.log(error)}\r\n}\r\n\r\nexport const postTodo = (payload,message) => async dispatch => {\r\n\r\n    const url = `${URL}/tasks/createTask`\r\n\r\n    const headers = {\"Authorization\":`${payload.token}`,'Content-Type': 'application/json'}\r\n\r\n    try {\r\n\r\n       const response = await axios.post(url,{payload},{headers:headers})\r\n\r\n       const result =  await response.data\r\n\r\n       dispatch(addTodo(result))\r\n       dispatch(setAlert(message))\r\n\r\n    } catch (error) {console.log(error.message)}\r\n\r\n}\r\n\r\nexport const deleteTodoById = (payload,message,token) => async dispatch => {\r\n\r\n    const url = `${URL}/tasks/${payload}`;\r\n\r\n   const headers = {\"Authorization\":`${token}`}\r\n\r\n    dispatch(isLoading(true))\r\n\r\n    try {\r\n\r\n        await axios.delete(url,{headers:headers})\r\n\r\n        dispatch(deleteTodo(payload))\r\n        dispatch(setAlert(message))\r\n\r\n        dispatch(isLoading(false))\r\n        \r\n    } catch (error) {console.log(error)}\r\n}\r\n\r\nexport const patchTodo = (payload,message) => async dispatch => {\r\n\r\n    const url = `${URL}/tasks/${payload._id}`\r\n\r\n    const headers = {\"Authorization\":`${payload.token}`}\r\n\r\n    try {\r\n\r\n        const response = await axios.put(url,{payload},{headers:headers})\r\n\r\n        const result = await response.data\r\n\r\n        dispatch(updateTodo(result))\r\n        dispatch(setAlert(message))\r\n\r\n    } catch (error) {console.log(error)}\r\n}\r\n\r\n","export const navMenuOut = [\r\n    \r\n  {name:\"SIGNIN\", icon:\"login\",link:\"/signin\"},\r\n  {name:\"SIGNUP\", icon:\"person_add\",link:\"/signup\"}\r\n]\r\n\r\nexport const navMenuIn = [\r\n\r\n  {name:\"LOGOUT\", icon:\"error_outline\",link:\"/logout\"}\r\n]\r\n\r\nexport const loginInitialState = { email:\"\",password:\"\"}\r\n\r\nexport const titleSignup = \"Create your account\"\r\n\r\nexport const titleLogo = \"Your daily task app !\"\r\n\r\nexport const titleSignin =\"Connexion\"\r\n\r\n\r\nexport const colors = [\r\n    {\r\n      value: '#fbc25d',\r\n      label: 'orange',\r\n    },\r\n    {\r\n      value: '#fb5d5d',\r\n      label: 'fushia',\r\n    },\r\n    {\r\n      value: '#93fb5d',\r\n      label: 'green',\r\n    },\r\n    {\r\n      value: '#5da0fb',\r\n      label: 'blue',\r\n    },\r\n    {\r\n        value: '#dc5dfb',\r\n        label: 'purple',\r\n    },\r\n    {\r\n        value: '#b3c785',\r\n        label: 'beige',\r\n    }\r\n];\r\n\r\n\r\nexport const deleteInfoMessage = {message:\"task deleted with success\", severity:\"info\"}\r\n\r\nexport const clearTodoListMessage = {message:\"Todo list is cleaned up\", severity:\"info\"}\r\n\r\nexport const addSuccessAlert = {message:\"New task added with success !\", severity:\"success\"}\r\n\r\nexport const errorAlert = {message:\"Field is blank, please fill out it\",severity:\"error\"}\r\n\r\nexport const updateSuccessAlert = {message:\"task updated with success !\", severity:\"success\"}\r\n\r\nexport const connexionError = {message:\"invalid password or username !\", severity: \"error\"}\r\n\r\n","\r\nexport  const validator = (obj) => {\r\n\r\n  let valid;\r\n  \r\n  Object.values(obj).forEach(value => value === \"\" ? valid = false : valid = true)\r\n\r\n return valid\r\n}","import React,{useState} from 'react'\r\nimport {Card, CardContent,Typography,CardActions,Button,Box,TextField,IconButton,Grid,MenuItem} from '@material-ui/core'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {patchTodo, postTodo,setAlert} from '../store/actions/todoActions'\r\n//// IMPORT ALL CONST & AND UTILS FUNCTIONS FROM \"utils.js\" files /////\r\nimport {addSuccessAlert,updateSuccessAlert,errorAlert,colors} from '../const'\r\nimport {validator} from '../utils'\r\n\r\n\r\nconst TodoForm = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const currentTodo = useSelector(state => state.todos.currentTodo)\r\n\r\n    const currentUser = useSelector(state => state.user.user)\r\n\r\n    const [todo,setTodo] = useState(currentTodo)\r\n\r\n    const [modeFormName,setModeFormName] = useState(props.modeForm)\r\n\r\n\r\n    ///// Hooks for reactivity and switch between mode Edit or Create and Populate the form ///////\r\n\r\n    React.useEffect(() => {\r\n\r\n        setTodo({...currentTodo,userId:currentUser.userId,token:currentUser.token})\r\n\r\n        setModeFormName(props.modeForm)\r\n\r\n    },[setTodo,currentTodo,setModeFormName,props.modeForm,currentUser])\r\n\r\n\r\n    const handleChange = (e) => {\r\n\r\n        const {value,name} = e.target\r\n\r\n        setTodo({...todo,[name]:value})\r\n    }\r\n\r\n    //// function determines if the Submit is an Update or Create todo ////\r\n    \r\n    \r\n    const handleSubmit = () => {\r\n\r\n        if(!validator(todo)){\r\n\r\n            dispatch(setAlert(errorAlert))\r\n\r\n        } else {\r\n            \r\n            modeFormName === \"Create\" ?  dispatch(postTodo(todo,addSuccessAlert)) : dispatch(patchTodo(todo,updateSuccessAlert))\r\n            \r\n            props.closeTodoForm()\r\n            window.sessionStorage.setItem('open','true')\r\n        }\r\n    }\r\n\r\n    const handleCancel = () => setTodo(currentTodo)\r\n\r\n    return(\r\n\r\n        <Box mt={2} width=\"90%\">\r\n            <Card className=\"backGroundCard\" elevation={4}>\r\n                <CardContent>\r\n                    <Box>\r\n                        <Typography variant=\"h4\" className=\"subTitle1\" >{modeFormName} your task</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <TextField \r\n                            onChange={handleChange}\r\n                            color=\"secondary\" \r\n                            margin=\"dense\" \r\n                            label=\"Title\"\r\n                            name=\"title\"\r\n                            value={todo.title}\r\n                            required\r\n                            />\r\n                        <TextField\r\n                            onChange={handleChange}\r\n                            color=\"secondary\"\r\n                            id=\"filled-multiline-static\"\r\n                            label=\"Description\"\r\n                            multiline\r\n                            rows={1}\r\n                            value={todo.description}\r\n                            name=\"description\"\r\n                            variant=\"filled\"\r\n                            required\r\n                        />\r\n                          <TextField\r\n                            onChange={handleChange}\r\n                            color=\"secondary\"\r\n                            required\r\n                            id=\"standard-select-color\"\r\n                            select\r\n                            label=\"Color\"\r\n                            name=\"color\"\r\n                            value={todo.color}\r\n                            helperText=\"Select a color for your task\"\r\n                            >\r\n                            {colors.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    <Box display=\"flex\" justifyContent=\"space-between\" style={{width:\"100%\"}}>\r\n                                        <Typography>{option.label}</Typography> \r\n                                        <Box className=\"colorPrev\" style={{backgroundColor:option.value}}></Box>\r\n                                    </Box>\r\n                                </MenuItem>\r\n                            ))}\r\n                            </TextField>\r\n                    </Box>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container display=\"flex\" justify=\"space-between\" alignItems=\"baseline\" >\r\n                        <Box>\r\n                            <Button onClick={handleSubmit} size=\"small\"><Typography className=\"buttonFont\" >Save</Typography></Button>\r\n                            <Button onClick={handleCancel} size=\"small\"><Typography className=\"buttonFont\" >Cancel</Typography></Button>\r\n                        </Box>\r\n                        <Box>\r\n                             <IconButton onClick={() => props.closeTodoForm(false)}>\r\n                                <Icon className=\"iconStyle\">close</Icon>\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoForm","import axios from 'axios'\r\nimport {URL} from '../../config'\r\nimport { setAlert } from './todoActions'\r\nimport {connexionError} from '../../const'\r\n\r\nexport const LOG_USER = \"LOG_USER\"\r\n\r\nexport const LOG_OUT = \"LOG_OUT\"\r\n\r\nexport const logUser = (user) => ({\r\n\r\n    type:LOG_USER,\r\n    payload:user\r\n})\r\n\r\nexport const logout = () => ({\r\n\r\n    type:LOG_OUT\r\n})\r\n\r\n\r\nexport const postCreateUser = (payload) => async dispatch => {\r\n\r\n    const url = `${URL}/users/signup`\r\n\r\n    try {\r\n        const user = await axios.post(url,payload)\r\n\r\n        await user.data\r\n\r\n       dispatch(postLogUser(payload))\r\n        \r\n    } catch(error){console.log(error); dispatch(setAlert(connexionError))}\r\n}\r\n\r\nexport const postLogUser = (payload) => async dispatch => {\r\n\r\n    const url = `${URL}/users/login`\r\n\r\n    try {\r\n\r\n        const user = await axios.post(url,payload)\r\n        \r\n        const response = await user.data\r\n  \r\n        dispatch(logUser(response))\r\n\r\n    } catch (error) {console.log(error); dispatch(setAlert(connexionError))}\r\n}    \r\n\r\nexport const logOut = () => dispatch => {\r\n\r\n    dispatch(logout())\r\n    window.location.reload()\r\n}\r\n","import * as todoActions from './todoActions'\r\nimport * as userActions from './userActions'\r\n\r\nconst actions = {todoActions,userActions}\r\n\r\n\r\nexport default actions","\r\nimport actions from '../actions'\r\n\r\nexport const initialState = {\r\n\r\n    todos: [],\r\n\r\n    currentTodo : {title:'',description:'',color:\"\", completed: false, userId:\"\"},\r\n\r\n    alert: {message :\"\", severity:\"\"},\r\n\r\n    loading:false\r\n}\r\n\r\nexport const todoReducer = (state = initialState,action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case actions.todoActions.ADD_TODO:\r\n            return {...state,\r\n                todos:[...state.todos,action.payload]}\r\n        \r\n        case actions.todoActions.GET_TODOS:\r\n            return {...state,\r\n                todos:action.payload}\r\n\r\n        case actions.todoActions.DELETE_TODO:\r\n            return {...state,\r\n                todos: state.todos.filter(todo => todo._id !== action.payload)}\r\n\r\n        case actions.todoActions.UPDATE_TODO:\r\n            return{...state,\r\n                todos: state.todos.map(todo => todo._id === action.payload._id ? action.payload : todo)}\r\n\r\n        case actions.todoActions.CURRENT_TODO:\r\n            return {...state,\r\n                currentTodo:action.payload}\r\n        \r\n        case actions.todoActions.SET_ALERT:\r\n            return {...state,alert:action.payload}\r\n        \r\n        case actions.todoActions.SET_LOADING:\r\n            return{...state,loading:action.payload}\r\n\r\n        default: \r\n        return state\r\n    };\r\n}\r\n\r\n\r\n","import React,{useEffect,useState} from 'react'\r\nimport {Grid,IconButton,Typography,Tooltip,Box,Paper,Accordion,AccordionSummary,AccordionDetails,Button} from '@material-ui/core'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {fetchTodo,deleteTodoById,getTodoById,selectTodo} from '../store/actions/todoActions'\r\nimport {initialState} from '../store/reducers/todoReducer'\r\n//// IMPORT ALL CONST & AND UTILS FUNCTIONS FROM \"utils.js\" files /////\r\nimport {deleteInfoMessage,clearTodoListMessage} from '../const'\r\n\r\nconst TodoList = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const todos = useSelector(state => state.todos.todos)\r\n\r\n    const currentTodo = useSelector(state => state.todos.currentTodo)\r\n\r\n    const currentUser = useSelector(state => state.user.user)\r\n\r\n    const isLoading = useSelector(state => state.todos.loading)\r\n    \r\n    const [expanded,setExpand] = useState(false)\r\n\r\n    /// fetch the API to call todos array ///\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(fetchTodo(currentUser))\r\n        \r\n    },[dispatch,currentUser])\r\n\r\n\r\n    const handleToggleAccordion = (panel) => (event,isExpanded) => {\r\n\r\n        setExpand(isExpanded ? panel : false)\r\n    }\r\n\r\n\r\n    const handleDelete = (id) => {\r\n\r\n        if(currentTodo._id === id){ dispatch(selectTodo(initialState.currentTodo))}\r\n        \r\n        dispatch(deleteTodoById(id,deleteInfoMessage,currentUser.token))\r\n\r\n        props.openTodoForm(false)\r\n\r\n        setExpand(false)\r\n    }\r\n\r\n    const handleEditTodo =  (id) => {\r\n\r\n        const editModeForm = \"Edit\"\r\n\r\n        dispatch(getTodoById(id,currentUser.token))\r\n\r\n        props.handleModeForm(editModeForm)\r\n\r\n        props.openTodoForm(true)\r\n\r\n        setExpand(false)\r\n    }\r\n\r\n    //// delete all Todos with a Loop ///////\r\n\r\n    const deleteAllTodo = () => {\r\n\r\n        todos.forEach(todo => {dispatch(deleteTodoById(todo._id,clearTodoListMessage,currentUser.token))})\r\n    }\r\n\r\n    return( \r\n        <Grid item md={8} >\r\n\r\n            {!isLoading ?\r\n\r\n           (todos.length >= 0 && <Paper >\r\n\r\n            {todos.map((todo,index) =>\r\n\r\n                <Accordion style={{backgroundColor:todo.color}} expanded={expanded === index} onChange={handleToggleAccordion(index)} key={index} >\r\n                    <AccordionSummary\r\n                    expandIcon={<Icon>expand_more</Icon>}\r\n                    >\r\n                        <Typography>{todo.title}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                            <Box>\r\n                                <Typography component=\"p\" variant=\"body2\">{todo.description}</Typography>\r\n                            </Box>\r\n                            <Box>\r\n                                <Tooltip title=\"edit your task\">\r\n                                    <IconButton onClick={()=> handleEditTodo(todo._id)} size=\"small\"><Icon className=\"iconStyle\" >edit</Icon></IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title=\"delete your task\">\r\n                                    <IconButton size=\"small\" onClick={() => handleDelete(todo._id)}><Icon className=\"iconStyle\">delete_forever</Icon></IconButton>\r\n                                </Tooltip>\r\n                            </Box>\r\n                        </Grid>\r\n                    </AccordionDetails>\r\n                </Accordion>    \r\n            )}\r\n        </Paper>) : (null)}\r\n\r\n        {!isLoading ? ( todos.length > 0 &&\r\n            <Box  display=\"flex\" justifyContent=\"center\" >\r\n                <Button onClick={()=> deleteAllTodo()} size=\"large\" startIcon={<Icon  className=\"iconStyle\">delete_outlined</Icon>}>\r\n                    <Typography  className=\"buttonFont\" >Clear ToDo List</Typography>\r\n                </Button>\r\n            </Box>):(null)}\r\n        </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default TodoList","import React from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {initialState} from '../store/reducers/todoReducer'\r\nimport {setAlert} from '../store/actions/todoActions'\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst AlertMessage = () => {\r\n\r\n  const alert = useSelector(state => state.todos.alert)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const clearAlert = () => dispatch(setAlert(initialState.alert))\r\n\r\n  const RenderAlert = () => {\r\n\r\n    if(alert.message !== \"\"){\r\n\r\n      setTimeout(() => {\r\n\r\n        clearAlert()\r\n        \r\n      }, 3000);\r\n\r\n      return(\r\n        <Alert variant=\"filled\" severity={alert.severity}>\r\n          {alert.message}\r\n        </Alert>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      {RenderAlert()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlertMessage","import React from 'react'\r\nimport {Typography,Box} from '@material-ui/core'\r\n\r\nconst Title = (props) => {\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n            <Typography variant=\"h2\" className=\"title\">ToDo</Typography>\r\n            <Typography variant=\"h5\" className=\"subTitle\">{props.title}</Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Title","import React,{useState} from 'react'\r\n//// IMPORT COMPONENTS //////\r\nimport TodoForm from '../components/TodoForm'\r\nimport TodoList from '../components/TodoList'\r\nimport AlertMessage from '../components/Alert'\r\nimport Title from '../components/Title'\r\n//// IMPORT COMPONENTS FROM FRAMEWORK UI ////////\r\nimport {Grid,Typography,Button,Box} from '@material-ui/core'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport {useDispatch} from 'react-redux'\r\nimport {selectTodo} from '../store/actions/todoActions'\r\nimport {initialState} from '../store/reducers/todoReducer'\r\n\r\n\r\nconst TodoHeader = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const createModeForm = \"Create\";\r\n\r\n    const [toggleTodoForm,setToggleTodoForm] = useState(false)\r\n\r\n    const [modeForm,setFormMode] = useState(createModeForm)\r\n\r\n    /// pure function to open/close the todo Form /////\r\n    const handleToggleTodoForm = (val) => setToggleTodoForm(val)\r\n\r\n    //// pure function to determine if the form component is in Edit or Create Mode //////////\r\n    const handleModeForm = (val) => setFormMode(val)\r\n\r\n    ///// function to populate  todo form //////\r\n    const handleFormState = (stateForm,modeFormName) => {\r\n\r\n        dispatch(selectTodo(stateForm))\r\n        handleModeForm(modeFormName)\r\n        handleToggleTodoForm(true)\r\n    }\r\n    \r\n    return( \r\n\r\n        <Grid item md={12}>\r\n            <Grid container justify=\"flex-end\">\r\n                <Grid item md={7} >\r\n                    <Grid container  justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n                        <Title/>\r\n                        <Box onClick={() => handleFormState(initialState.currentTodo,createModeForm)} mt={1}>\r\n                            <Button size=\"large\" startIcon={<Icon  className=\"iconStyle\">add_circle_outline</Icon>}>\r\n                                <Typography  className=\"buttonFont\" >add a new task</Typography>\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid  container  justify=\"center\">\r\n                        <TodoList handleModeForm={handleModeForm} openTodoForm={handleToggleTodoForm}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item md={3}> \r\n                    {toggleTodoForm && <TodoForm modeForm={modeForm} closeTodoForm={handleToggleTodoForm}/>} \r\n                    <Box mt={7} mr={2}>\r\n                        <AlertMessage/>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n \r\n    )\r\n}\r\n\r\nexport default TodoHeader","import React from 'react'\r\nimport {Grid,Box} from '@material-ui/core'\r\n\r\nimport TodoHeader from '../components/TodoHeader'\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return(\r\n       \r\n            <Grid container display=\"flex\" justify=\"center\">\r\n                <TodoHeader/>\r\n            </Grid>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Home","import React,{useState,useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {List,ListItem,Box,Typography,ListItemIcon} from '@material-ui/core'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport {navMenuOut,navMenuIn} from \"../const\"\r\n\r\n\r\nconst Navigation = () => {\r\n\r\n    const userLog = useSelector(state => state.user.userLog)\r\n\r\n    const user = useSelector(state => state.user.user)\r\n\r\n    const [menuField,setMenuField] = useState(navMenuOut)\r\n\r\n   \r\n    useEffect(() => {\r\n\r\n        userLog ? setMenuField(navMenuIn) : setMenuField(navMenuOut)\r\n\r\n    },[userLog])\r\n\r\n    return(\r\n        <Box>\r\n            <List>\r\n                <Box display=\"flex\">\r\n                  {menuField.map((field,index) => \r\n                    <ListItem key={index}>\r\n                        <Link to={field.link} className=\"navLink\">\r\n                            <Box display=\"flex\">\r\n                                <ListItemIcon>\r\n                                    <Box mr={1}>\r\n                                        <Typography variant=\"body1\" className=\"subTitle\">{field.name}</Typography>\r\n                                    </Box>\r\n                                    <Icon >{field.icon}</Icon>\r\n                                </ListItemIcon>\r\n                            </Box>  \r\n                        </Link>\r\n                    </ListItem>\r\n                  )}\r\n                  {userLog && \r\n                    <ListItem >\r\n                        <Box display=\"flex\">\r\n                            <ListItemIcon>\r\n                                <Box mr={1}>\r\n                                    <Typography variant=\"body1\" className=\"subTitle\">{user.username}</Typography>\r\n                                </Box>\r\n                                    <Icon>sentiment_satisfied_alt</Icon>\r\n                            </ListItemIcon>\r\n                        </Box>  \r\n                    </ListItem>\r\n                  }\r\n                </Box>\r\n            </List>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport Navigation from './Navigation'\r\nimport {Grid,Box,Toolbar} from '@material-ui/core'\r\n\r\n\r\nconst Header = () => {\r\n\r\n    return(\r\n        <nav>\r\n            <Grid item md={12}>\r\n                <Toolbar>\r\n                    <Grid container direction=\"row\" justify=\"flex-end\">\r\n                        <Box>\r\n                            <Navigation/>\r\n                        </Box>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </Grid>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Box,Button,TextField} from '@material-ui/core'\r\nimport {setAlert} from '../store/actions/todoActions'\r\nimport {validator} from '../utils'\r\nimport {errorAlert} from '../const'\r\nimport Alert from '../components/Alert'\r\n\r\nconst UserForm = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [state,setState] = React.useState(props.state)\r\n\r\n    const handleChange = (e) => {\r\n\r\n        const {name,value} = e.target\r\n\r\n        setState({...state,[name]:value})\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n\r\n       validator(state) ? props.handleSubmit(state) : dispatch(setAlert(errorAlert))\r\n    }\r\n\r\n    return(\r\n            \r\n        <Box  mt={3} p={2} display=\"flex\" flexDirection=\"column\" position=\"reltive\" >        \r\n            <Box display=\"flex\" flexDirection=\"column\">\r\n\r\n                {!props.loginMode && \r\n\r\n                    <TextField onChange={handleChange} name=\"username\" value={state.username} color=\"secondary\" required label=\"Username\"/>\r\n                }\r\n\r\n                <TextField onChange={handleChange} type=\"email\" name=\"email\" value={state.email} color=\"secondary\" required label=\"Email\"/>\r\n                <TextField onChange={handleChange} name=\"password\" value={state.password} type=\"password\" color=\"secondary\" required label=\"Password\"/>\r\n            </Box>\r\n            <Box mt={3} display=\"flex\" justifyContent=\"flex-end\">\r\n                <Button onClick={()=>handleSubmit()} className=\"buttonFont\">OK</Button>\r\n                <Button onClick={()=> setState(props.state)} className=\"buttonFont\">Cancel</Button>\r\n            </Box>\r\n            <Box position=\"absolute\" bottom=\"35px\" width=\"25%\">\r\n                <Alert/>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default UserForm","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Grid,Box} from '@material-ui/core'\r\nimport UserForm from '../components/UserForm'\r\nimport Title from '../components/Title'\r\nimport {titleSignin} from '../const'\r\nimport {loginInitialState} from '../const'\r\nimport {postLogUser} from '../store/actions/userActions'\r\n\r\n\r\nconst Signin = () => {\r\n\r\n    const loginMode = true\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = (user) => {\r\n\r\n        dispatch(postLogUser(user))\r\n    }  \r\n    \r\n    \r\n    return(\r\n\r\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Title title={titleSignin}/>\r\n            <Grid container justify=\"center\">\r\n                <Grid item md={3}>\r\n                    <UserForm loginMode={loginMode} handleSubmit={handleSubmit} state={loginInitialState}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default Signin","import actions from \"../actions\"\r\n\r\nexport const initialState = {\r\n    \r\n  user:  {username:\"\", password:\"\",email:\"\" },\r\n\r\n  userLog:false\r\n}\r\n\r\nexport  const userRedecucer = (state = initialState,action) => {\r\n\r\n  switch(action.type){\r\n\r\n    case actions.userActions.LOG_USER:\r\n      return{...state,\r\n      user:action.payload,userLog:true}\r\n\r\n    case actions.userActions.LOG_OUT:\r\n      return{...state,\r\n        user:initialState.user,userLog:false}\r\n\r\n    default:\r\n    return state\r\n  }\r\n\r\n}","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Box,Grid} from '@material-ui/core'\r\nimport Title from '../components/Title'\r\nimport UserForm from '../components/UserForm'\r\nimport {postCreateUser} from '../store/actions/userActions'\r\nimport {initialState} from '../store/reducers/userReducer'\r\nimport {titleSignup} from '../const'\r\n\r\nconst Signup = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = (user) => {\r\n\r\n        dispatch(postCreateUser(user))\r\n    }\r\n\r\n    return( \r\n\r\n        <Box  alignItems=\"center\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n            <Title title={titleSignup}/>\r\n            <Grid container justify=\"center\">\r\n                <Grid item md={3}>\r\n                    <UserForm handleSubmit={handleSubmit} state={initialState.user}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default Signup","import React from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {logOut} from '../store/actions/userActions'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst LogoutDialog = () => {\r\n\r\n    const history =  useHistory()\r\n    const dispatch = useDispatch()\r\n   \r\n  return (\r\n    <div>\r\n    \r\n      <Dialog\r\n        open={true}\r\n        aria-describedby=\"alert-dialog-title\"\r\n      >\r\n        <DialogContent>\r\n        <DialogTitle>Confirm Logout ?</DialogTitle>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=> history.push('/')} className='buttonFont'> Cancel</Button>\r\n          <Button onClick={()=> dispatch(logOut())} className='buttonFont' > Ok </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogoutDialog","import React from 'react'\r\nimport {Grid} from '@material-ui/core'\r\nimport LogoutDialog from '../components/logoutDialog'\r\n\r\nconst Logout = () => {\r\n\r\n    return(\r\n\r\n        <Grid>\r\n            <LogoutDialog/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Logout","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {HashRouter as Router,Switch,Route, Redirect} from 'react-router-dom'\r\nimport {Grid} from '@material-ui/core'\r\nimport TodoHeader from './components/TodoHeader'\r\nimport Home from './pages/Home'\r\nimport Header from './components/Header'\r\nimport Signin from './pages/Signin'\r\nimport Signup from './pages/Singup'\r\nimport Logout from './pages/logout'\r\n\r\nfunction App() {  \r\n\r\n  const userLog = useSelector(state => state.user.userLog)\r\n\r\n  const RedirectRender = () => {\r\n\r\n    if(userLog){\r\n\r\n      return (<Redirect push to='/'/>)\r\n    } \r\n\r\n    return (<Redirect push to='/signin'/>)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Grid container className=\"backGround\">\r\n        <Grid item md={12}>\r\n          <Grid container diplay=\"flex\" justify=\"flex-end\">\r\n            <Header/>\r\n          </Grid>\r\n          <Grid container display=\"flex\" justify=\"center\" direction=\"column\">\r\n            <Switch>\r\n              <Route exact path={\"/\"} component={Home}/>\r\n              <Route path={'/todo'} component={TodoHeader}/>\r\n              <Route path={'/signin'} component={Signin}/>\r\n              <Route path={\"/signup\"} component={Signup}/>\r\n              <Route path={\"/logout\"} component={Logout}/>\r\n            </Switch>\r\n            {RedirectRender()}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers} from 'redux'\r\nimport {todoReducer} from './todoReducer'\r\nimport {userRedecucer} from \"./userReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n\r\n    todos : todoReducer,\r\n    user : userRedecucer\r\n})\r\n\r\n    \r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore,applyMiddleware} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport thunk from \"redux-thunk\"\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport './index.css';\r\n//   LOCAL IMPORTS   ///\r\nimport App from './App';\r\nimport rootReducer from './store/reducers'\r\n\r\nconst store = createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}